/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package di;

import di.container.BeanDescription;
import di.container.BeanFactory;
import di.container.BeanLifecycle;
import di.container.BeanProperty;
import di.container.DIContainer;
import di.container.DIContainerException;
import di.container.JSONDIContainer;
import java.util.HashMap;
import java.util.Map;
import org.junit.Test;
import static org.junit.Assert.*;

public class BeanGenerationTest {
    @Test public void basicSingletonTest() {
        String value = "TestString";

        BeanDescription singleton = new BeanDescription();
        singleton.setBeanLifecycle(BeanLifecycle.SINGLETON);
        singleton.setProxy(false);
        singleton.setClazz(SimpleSingleton.class);
        singleton.setInstance(null);

        BeanProperty stringArg = new BeanProperty();
        stringArg.setName("attribute");
        stringArg.setValue(value);
        stringArg.setClazz(String.class);

        singleton.getConstructorArgs().add(stringArg);

        Map<String, BeanDescription> map = new HashMap<>();
        map.put("singleton", singleton);
        BeanFactory beanFactory = new BeanFactory(map);
        DIContainer container = new JSONDIContainer(beanFactory);

        SimpleSingleton bean = null;
        try {
            bean = (SimpleSingleton) container.getBean("singleton");
        } catch (DIContainerException e) {
            e.printStackTrace();
            fail();
        }

        assertEquals(value, bean.getAttribute());
    }
}
